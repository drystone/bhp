#!/usr/bin/python

# Copyright 2010,2012 John Hedges
#
# This file is part of bhp.
#
# bhp is free software: you can redistribute it and/or modify it under the
# terms of the GNU General Public License as published by the Free Software
# Foundation, either version 3 of the License, or (at your option) any later
# version.
#
# bhp is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR
# A PARTICULAR PURPOSE. See the GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along with
# bhp. If not, see <http://www.gnu.org/licenses/>.

import argparse, os, sys, socket

parser = argparse.ArgumentParser(description='Control the UDIN device')
parser.add_argument('-s', '--status', action='store_true', help='get the current switch settings')
parser.add_argument('-r', '--reset', type=int, nargs='?', const='0', help='set the current switch settings (without param sets all to off)')
parser.add_argument('-a', '--address', default='/tmp/udind', help='address of unix domain socket to connect to (defaults to /tmp/udind)')
parser.add_argument('command', nargs='*', help='command pairs eg. 1 on 2 off ...')
args = parser.parse_args()

try:
    if len(args.command) % 2:
        raise Exception()
    for arg in args.command[0::2]:
        device = int(arg)
        if device < 1 or device > 8:
            raise Exception()
    for arg in args.command[1::2]:
        if arg != 'on' and arg != 'off':
            raise Exception()
except Exception:
    parser.print_help()
    sys.exit(-1)

s = socket.socket(socket.AF_UNIX, socket.SOCK_STREAM)
s.connect(args.address)
if type(args.reset) == int and args.reset >= 0:
    s.sendall('reset {0}\n'.format(args.reset & 0xff))
for device, state in zip(args.command[0::2], args.command[1::2]):
    s.sendall('switch {0} {1}\n'.format(device, state))
if args.status:
    s.sendall('status\n')
    state = s.recv(1024)
    sys.stdout.write(state+'\n')
s.close

